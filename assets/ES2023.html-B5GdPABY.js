import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Ds4AiUcn.js";const e="/assets/202306121001-DonG86UP.png",p={},o=t(`<h2 id="es2023-es14" tabindex="-1"><a class="header-anchor" href="#es2023-es14"><span>ES2023 ES14</span></a></h2><h3 id="数组副本" tabindex="-1"><a class="header-anchor" href="#数组副本"><span>数组副本</span></a></h3><p>数组中很多方法可以改变数组本身，比如sort splice，类似的方法还有：toReversed、toSpliced、with</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sortArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> sortArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [1, 2, 3]  [1, 2, 3]</span>

<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sortArr2 <span class="token operator">=</span> arr2<span class="token punctuation">.</span><span class="token function">toSorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> sortArr2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[3, 2, 1]   [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="with" tabindex="-1"><a class="header-anchor" href="#with"><span>with</span></a></h3><p>with表示修改指定索引值，返回新的数组</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> withArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> withArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1, 2, 3]   [1, false, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从尾部查找-findlast-findlastindex" tabindex="-1"><a class="header-anchor" href="#从尾部查找-findlast-findlastindex"><span>从尾部查找(findLast findLastIndex)</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//findLast</span>
<span class="token keyword">const</span> <span class="token function-variable function">isEven</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> number<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findLast</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>

<span class="token comment">//findLastIndex</span>
<span class="token keyword">const</span> <span class="token function-variable function">isEven</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findLastIndex</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//result: 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="weakmap支持symbol作为key" tabindex="-1"><a class="header-anchor" href="#weakmap支持symbol作为key"><span>WeakMap支持Symbol作为key</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> weak <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;symbol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
weak<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;ECMAScript 2023&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> weak<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ECMAScript 2023</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashbang语法" tabindex="-1"><a class="header-anchor" href="#hashbang语法"><span>Hashbang语法</span></a></h3><p>Hashbang也叫Shebang，是由一个井号和叹号组成的字符序列。，用来指定使用哪种解释器进行执行这个文件。<br> nodejs中很早就进行了应用，之前在执行js文件的时候，使用的是node对应的js文件，有了Hashbang之后，可以直接执行对应的js文件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/local/bin/node</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行文件： ./test.js （注意这是在macos下的运行命令）</p><p>该语法兼容性：<br><img src="`+e+'" alt="" loading="lazy"></p>',16),c=[o];function l(i,u){return s(),a("div",null,c)}const d=n(p,[["render",l],["__file","ES2023.html.vue"]]),m=JSON.parse(`{"path":"/web/javascript/ES2023.html","title":"ECMAScript","lang":"zh-CN","frontmatter":{"title":"ECMAScript","date":"2023-06-12T00:00:00.000Z","category":["javascript"],"description":" ES2023 ES14 数组副本 数组中很多方法可以改变数组本身，比如sort splice，类似的方法还有：toReversed、toSpliced、with with with表示修改指定索引值，返回新的数组 从尾部查找(findLast findLastIndex) WeakMap支持Symbol作为key Hashbang语法 Hashban...","head":[["meta",{"property":"og:url","content":"https://github.com/xinyang424/web/javascript/ES2023.html"}],["meta",{"property":"og:site_name","content":"XinYang"}],["meta",{"property":"og:title","content":"ECMAScript"}],["meta",{"property":"og:description","content":" ES2023 ES14 数组副本 数组中很多方法可以改变数组本身，比如sort splice，类似的方法还有：toReversed、toSpliced、with with with表示修改指定索引值，返回新的数组 从尾部查找(findLast findLastIndex) WeakMap支持Symbol作为key Hashbang语法 Hashban..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XinYang's Blog"}],["meta",{"property":"article:published_time","content":"2023-06-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ECMAScript\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XinYang's Blog\\",\\"url\\":\\"https://xinyang424.com\\"}]}"]]},"headers":[{"level":2,"title":"ES2023 ES14","slug":"es2023-es14","link":"#es2023-es14","children":[{"level":3,"title":"数组副本","slug":"数组副本","link":"#数组副本","children":[]},{"level":3,"title":"with","slug":"with","link":"#with","children":[]},{"level":3,"title":"从尾部查找(findLast findLastIndex)","slug":"从尾部查找-findlast-findlastindex","link":"#从尾部查找-findlast-findlastindex","children":[]},{"level":3,"title":"WeakMap支持Symbol作为key","slug":"weakmap支持symbol作为key","link":"#weakmap支持symbol作为key","children":[]},{"level":3,"title":"Hashbang语法","slug":"hashbang语法","link":"#hashbang语法","children":[]}]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"web/javascript/ES2023.md","localizedDate":"2023年6月12日","autoDesc":true}`);export{d as comp,m as data};
