import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Ds4AiUcn.js";const p={},o=t(`<h3 id="根据path对文件进行签名" tabindex="-1"><a class="header-anchor" href="#根据path对文件进行签名"><span>根据path对文件进行签名</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> SparkMD5 <span class="token keyword">from</span> <span class="token string">&quot;spark-md5&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> md5File <span class="token operator">=</span> <span class="token punctuation">(</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
  md5<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">requestFileSystem</span><span class="token punctuation">(</span>
      plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token constant">PRIVATE_WWW</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>fs<span class="token operator">:</span> PlusIoFileSystem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span>root<span class="token operator">?.</span><span class="token function">getFile</span><span class="token punctuation">(</span>
          path<span class="token punctuation">,</span>
          <span class="token punctuation">{</span> create<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">(</span>fileEntry<span class="token operator">:</span> PlusIoFileEntry<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            fileEntry<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>
              <span class="token punctuation">(</span>file<span class="token operator">:</span> PlusIoFile<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> fileReader<span class="token operator">:</span> PlusIoFileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">plus</span><span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                fileReader<span class="token punctuation">.</span><span class="token function-variable function">onloadend</span> <span class="token operator">=</span> <span class="token punctuation">(</span>evt<span class="token operator">:</span> PlusIoFileEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token comment">// @ts-ignore</span>
                    md5<span class="token operator">:</span> <span class="token function">calculateBase64Hash</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>target<span class="token operator">?.</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    size<span class="token operator">:</span> file<span class="token punctuation">.</span>size <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                fileReader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              fileError <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;获取文件对象失败：&quot;</span> <span class="token operator">+</span> fileError<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          fileEntryError <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;读取文件失败：&quot;</span> <span class="token operator">+</span> fileEntryError<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      fsError <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;读取文件失败：&quot;</span> <span class="token operator">+</span> fsError<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 根据文件的base64生成md5
 *
 * <span class="token keyword">@param</span> <span class="token parameter">base64</span> 文件的base64
 * <span class="token keyword">@returns</span> 文件的md5码
 */</span>
<span class="token keyword">const</span> calculateBase64Hash <span class="token operator">=</span> <span class="token punctuation">(</span>base64<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  spark<span class="token punctuation">.</span><span class="token function">appendBinary</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="根据path判断文件是否存在" tabindex="-1"><a class="header-anchor" href="#根据path判断文件是否存在"><span>根据path判断文件是否存在</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 根据文件路径异步判断该路径下的文件是否存在
 *
 * <span class="token keyword">@param</span> <span class="token parameter">path</span> 文件路径
 * <span class="token keyword">@returns</span> 返回true代表该文件存在，返回false代表该文件不存在
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> checkFileExists <span class="token operator">=</span> <span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// #ifdef APP-PLUS</span>
      plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">requestFileSystem</span><span class="token punctuation">(</span>
        plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token constant">PRIVATE_DOC</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>fs<span class="token operator">:</span> PlusIoFileSystem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          fs<span class="token punctuation">.</span>root<span class="token operator">?.</span><span class="token function">getFile</span><span class="token punctuation">(</span>
            path<span class="token punctuation">,</span>
            <span class="token punctuation">{</span> create<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// #endif</span>
      <span class="token comment">// #ifdef H5</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// #endif</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="获取手机缓存文件总共多大" tabindex="-1"><a class="header-anchor" href="#获取手机缓存文件总共多大"><span>获取手机缓存文件总共多大</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 异步获取手机缓存有多大
 *
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> calculateDeviceCacheSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PromiseResolveValue<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// #ifdef APP-PLUS</span>
    <span class="token keyword">let</span> isGetSuccess<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">requestFileSystem</span><span class="token punctuation">(</span>
      plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token constant">PRIVATE_DOC</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>fs<span class="token operator">:</span> PlusIoFileSystem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 允许最大时间查询文件大小，避免一些情况下卡住无法返回文件的大小
         */</span>
        <span class="token keyword">let</span> timer<span class="token operator">:</span> NodeJS<span class="token punctuation">.</span>Timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token operator">!</span>isGetSuccess <span class="token operator">&amp;&amp;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              flag<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
              data<span class="token operator">:</span> <span class="token function">formatBytes</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fs<span class="token punctuation">.</span>root<span class="token operator">?.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span>directoryEntry<span class="token operator">:</span> PlusIoMetadata<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            isGetSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              flag<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
              data<span class="token operator">:</span> <span class="token function">formatBytes</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>directoryEntry<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          getError <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
              errMsg<span class="token operator">:</span> getError<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          errMsg<span class="token operator">:</span> error<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// #endif</span>
    <span class="token comment">// #ifdef H5</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      errMsg<span class="token operator">:</span> <span class="token string">&quot;仅支持在APP上获取缓存文件大小&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// #endif</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="清除手机缓存文件" tabindex="-1"><a class="header-anchor" href="#清除手机缓存文件"><span>清除手机缓存文件</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 异步清除设备缓存文件
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> clearDeviceCache <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PromiseResolveValue<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span>PromiseResolveValue<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// #ifdef APP-PLUS</span>
    uni<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">&quot;清除设备缓存中&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">requestFileSystem</span><span class="token punctuation">(</span>
      plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token constant">PRIVATE_DOC</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>fs<span class="token operator">:</span> PlusIoFileSystem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span>root<span class="token operator">?.</span><span class="token function">removeRecursively</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            uni<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              flag<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
              errMsg<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          failRes <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            uni<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
              errMsg<span class="token operator">:</span> failRes<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        uni<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          errMsg<span class="token operator">:</span> error<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// #endif</span>
    <span class="token comment">// #ifdef H5</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      flag<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      errMsg<span class="token operator">:</span> <span class="token string">&quot;仅在APP下支持清除缓存功能&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// #endif</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="根据bytes转换单位" tabindex="-1"><a class="header-anchor" href="#根据bytes转换单位"><span>根据bytes转换单位</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 将字节大小格式化如：1KB、1MB、1GB等
 *
 * <span class="token keyword">@param</span> <span class="token parameter">bytes</span> 字节大小
 * <span class="token keyword">@returns</span> 转换单位类似为：1KB、1MB、1GB等
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> formatBytes <span class="token operator">=</span> <span class="token punctuation">(</span>bytes<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bytes <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;0 MB&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> k <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> sizes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Bytes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ZB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;YB&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span>bytes <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> sizes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="下载安装包" tabindex="-1"><a class="header-anchor" href="#下载安装包"><span>下载安装包</span></a></h3><details class="hint-container details"><summary>查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">downloadAPK</span> <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">errorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>plus<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name<span class="token operator">?.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;ios&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plus<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span><span class="token function">openURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> waitingToast<span class="token operator">:</span> PlusNativeUIWaitingObj <span class="token operator">=</span> plus<span class="token punctuation">.</span>nativeUI<span class="token punctuation">.</span><span class="token function">showWaiting</span><span class="token punctuation">(</span><span class="token string">&quot;正在初始化下载...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> downloadTask<span class="token operator">:</span> PlusDownloaderDownload <span class="token operator">=</span> plus<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span><span class="token function">createDownload</span><span class="token punctuation">(</span>
      url <span class="token operator">+</span> <span class="token function">useJsonToUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> version<span class="token operator">:</span> userInfoStore<span class="token punctuation">.</span>userConf<span class="token punctuation">.</span>latestAppVersion<span class="token punctuation">,</span> appId<span class="token operator">:</span> defaultConfig<span class="token punctuation">.</span>appid <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
        timeout<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        retryInterval<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        retry<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span>download<span class="token operator">:</span> PlusDownloaderDownload<span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        plus<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        waitingToast<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;下载完成，等待安装...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          download<span class="token punctuation">.</span>filename <span class="token operator">&amp;&amp;</span>
            plus<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>
              plus<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token function">convertLocalFileSystemURL</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                force<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                plus<span class="token punctuation">.</span>nativeUI<span class="token punctuation">.</span><span class="token function">closeWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              installErrorMsg <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                plus<span class="token punctuation">.</span>nativeUI<span class="token punctuation">.</span><span class="token function">closeWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">errorCallback</span><span class="token punctuation">(</span><span class="token string">&quot;安装错误：&quot;</span> <span class="token operator">+</span> installErrorMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          plus<span class="token punctuation">.</span>nativeUI<span class="token punctuation">.</span><span class="token function">closeWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">errorCallback</span><span class="token punctuation">(</span><span class="token string">&quot;下载最新APP版本失败，请稍后重试或联系APP开发者&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      downloadTask<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> userInfoStore<span class="token punctuation">.</span>token<span class="token punctuation">.</span>authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>
      downloadTask<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      downloadTask<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;statechanged&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>task<span class="token operator">:</span> PlusDownloaderDownload<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
            waitingToast<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;正在连接服务器...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
            waitingToast<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;服务器连接成功，开始下载...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>downloadedSize <span class="token operator">&amp;&amp;</span> task<span class="token punctuation">.</span>totalSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> percent <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>downloadedSize<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>totalSize<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              waitingToast<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;正在下载(&quot;</span> <span class="token operator">+</span> percent <span class="token operator">+</span> <span class="token string">&quot;%)...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      plus<span class="token punctuation">.</span>nativeUI<span class="token punctuation">.</span><span class="token function">closeWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">errorCallback</span><span class="token punctuation">(</span><span class="token string">&quot;下载失败，请稍后重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,12),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","api.html.vue"]]),d=JSON.parse(`{"path":"/web/mobile-dev/uni-app/api.html","title":"自封装的hook","lang":"zh-CN","frontmatter":{"title":"自封装的hook","date":"2024-02-25T00:00:00.000Z","category":["移动开发"],"description":"根据path对文件进行签名 查看代码 根据path判断文件是否存在 查看代码 获取手机缓存文件总共多大 查看代码 清除手机缓存文件 查看代码 根据bytes转换单位 查看代码 下载安装包 查看代码 ","head":[["meta",{"property":"og:url","content":"https://github.com/xinyang424/web/mobile-dev/uni-app/api.html"}],["meta",{"property":"og:site_name","content":"XinYang"}],["meta",{"property":"og:title","content":"自封装的hook"}],["meta",{"property":"og:description","content":"根据path对文件进行签名 查看代码 根据path判断文件是否存在 查看代码 获取手机缓存文件总共多大 查看代码 清除手机缓存文件 查看代码 根据bytes转换单位 查看代码 下载安装包 查看代码 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XinYang's Blog"}],["meta",{"property":"article:published_time","content":"2024-02-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自封装的hook\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XinYang's Blog\\",\\"url\\":\\"https://xinyang424.com\\"}]}"]]},"headers":[{"level":3,"title":"根据path对文件进行签名","slug":"根据path对文件进行签名","link":"#根据path对文件进行签名","children":[]},{"level":3,"title":"根据path判断文件是否存在","slug":"根据path判断文件是否存在","link":"#根据path判断文件是否存在","children":[]},{"level":3,"title":"获取手机缓存文件总共多大","slug":"获取手机缓存文件总共多大","link":"#获取手机缓存文件总共多大","children":[]},{"level":3,"title":"清除手机缓存文件","slug":"清除手机缓存文件","link":"#清除手机缓存文件","children":[]},{"level":3,"title":"根据bytes转换单位","slug":"根据bytes转换单位","link":"#根据bytes转换单位","children":[]},{"level":3,"title":"下载安装包","slug":"下载安装包","link":"#下载安装包","children":[]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":2.66,"words":797},"filePathRelative":"web/mobile-dev/uni-app/api.md","localizedDate":"2024年2月25日","autoDesc":true}`);export{r as comp,d as data};
