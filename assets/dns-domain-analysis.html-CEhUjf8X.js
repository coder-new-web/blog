import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as o,e as n}from"./app-Ds4AiUcn.js";const r={},a=n('<p>网上访问资源实际就是访问主机IP地址，域名的出现本身也就是为了方便记忆，例如<code>www.baidu.com</code>可以一眼记住，但是各种无序的号码就会让人眼花缭乱也不方便记忆。</p><h3 id="dns域名解析大致流程" tabindex="-1"><a class="header-anchor" href="#dns域名解析大致流程"><span>DNS域名解析大致流程</span></a></h3><p>用户输入某一网址-&gt;本地解析-&gt;本地找到了-&gt;返回域名对应的IP地址<br> 用户输入某一网址-&gt;本地解析-&gt;本地找不到-&gt;互联网域名服务器解析-&gt;返回域名对应的IP地址</p><h3 id="本地解析" tabindex="-1"><a class="header-anchor" href="#本地解析"><span>本地解析</span></a></h3><p>用户输入某一网址后，首先会去<strong>浏览器缓存</strong>里查找，如果找到了就直接返回IP地址。<br> 如果没有找到就去<strong>系统缓存(操作系统DNS缓存)<strong>里面去找，如果找到了就直接返回IP地址。<br> 如果还是没有找到，就去</strong>本地HOST文件</strong>查找，如果找到了就返回IP地址。<br> 如果还是没有找到就进入下一阶段——<strong>互联网域名服务器解析</strong>。</p><h3 id="互联网域名服务器解析" tabindex="-1"><a class="header-anchor" href="#互联网域名服务器解析"><span>互联网域名服务器解析</span></a></h3><p>客户端会找到<strong>本地DNS服务器</strong>，让<strong>本地DNS服务器</strong>帮忙解析出域名对应的IP地址。<br> 首先<strong>本地DNS服务器</strong>会先在自己的缓存里查找，如果找到了，就直接返回IP地址。<br> 如果没有找到，<strong>本地DNS服务器</strong>就会麻烦<strong>根服务器</strong>根据域名查找对应的IP地址， 而<strong>根服务器</strong>并不会直接帮你找，它发现用户输入的域名后缀为：<code>.com</code>，然后<strong>根服务器</strong>会提供<code>.com</code><strong>服务器</strong>（管理员）地址，让<strong>本地DNS服务器</strong>去找对应的<code>.com</code><strong>服务器</strong>（管理员）。<br> 然后<code>.com</code><strong>服务器</strong>也不会直接帮你找，它看了域名是<code>www.baidu.com</code>然后就会提供<code>www.baidu.com</code>服务器地址，让本地DNS服务器自己找对应的<code>www.baidu.com</code>服务器，此时<code>www.baidu.com</code>服务器告诉了本地DNS服务器地址说，<code>www.baidu.com</code>对应的服务器地址是 <code>14.245.177.39</code>，然后本地DNS服务器会根据用户输入的域名找到的IP地址返回给客户端。</p>',7),s=[a];function c(i,d){return e(),o("div",null,s)}const p=t(r,[["render",c],["__file","dns-domain-analysis.html.vue"]]),m=JSON.parse(`{"path":"/web/network/dns-domain-analysis.html","title":"DNS域名解析","lang":"zh-CN","frontmatter":{"title":"DNS域名解析","date":"2022-03-01T00:00:00.000Z","category":["网络与网络安全"],"tag":["http缓存"],"description":" 网上访问资源实际就是访问主机IP地址，域名的出现本身也就是为了方便记忆，例如www.baidu.com可以一眼记住，但是各种无序的号码就会让人眼花缭乱也不方便记忆。 DNS域名解析大致流程 用户输入某一网址->本地解析->本地找到了->返回域名对应的IP地址 用户输入某一网址->本地解析->本地找不到->互联网域名服务器解析->返回域名对应的IP地址...","head":[["meta",{"property":"og:url","content":"https://github.com/xinyang424/web/network/dns-domain-analysis.html"}],["meta",{"property":"og:site_name","content":"XinYang"}],["meta",{"property":"og:title","content":"DNS域名解析"}],["meta",{"property":"og:description","content":" 网上访问资源实际就是访问主机IP地址，域名的出现本身也就是为了方便记忆，例如www.baidu.com可以一眼记住，但是各种无序的号码就会让人眼花缭乱也不方便记忆。 DNS域名解析大致流程 用户输入某一网址->本地解析->本地找到了->返回域名对应的IP地址 用户输入某一网址->本地解析->本地找不到->互联网域名服务器解析->返回域名对应的IP地址..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XinYang's Blog"}],["meta",{"property":"article:tag","content":"http缓存"}],["meta",{"property":"article:published_time","content":"2022-03-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DNS域名解析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XinYang's Blog\\",\\"url\\":\\"https://xinyang424.com\\"}]}"]]},"headers":[{"level":3,"title":"DNS域名解析大致流程","slug":"dns域名解析大致流程","link":"#dns域名解析大致流程","children":[]},{"level":3,"title":"本地解析","slug":"本地解析","link":"#本地解析","children":[]},{"level":3,"title":"互联网域名服务器解析","slug":"互联网域名服务器解析","link":"#互联网域名服务器解析","children":[]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":1.89,"words":567},"filePathRelative":"web/network/dns-domain-analysis.md","localizedDate":"2022年3月1日","autoDesc":true}`);export{p as comp,m as data};
