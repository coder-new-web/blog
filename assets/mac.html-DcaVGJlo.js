import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as t,c,a as e,d as n,b as l,e as i}from"./app-Ds4AiUcn.js";const r={},d=e("h2",{id:"安装-homebrew",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-homebrew"},[e("span",null,"安装 homebrew")])],-1),p=e("p",null,"  利用 homebrew 可以在终端快速安装你想要的软件，它是一款Mac OS平台下的软件包管理工具，拥有下载、卸载、更新、查看、搜索等功能。通过简单的指令可以实现包管理。而不用关心各种依赖和文件路径情况。类似于前端的npm来管理依赖包。",-1),m=e("p",null,[n("  在安装之前可以检查一下电脑上是否安装了 brew，在终端上输入"),e("code",null,"brew"),n("后回车，若显示"),e("mark",null,"command not found"),n("字样则代表没有安装。")],-1),h={href:"https://brew.sh/zh-cn/",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>  若没有科学上网工具，可以按照以下步骤使用国内镜像源进行安装：</p><ol><li>复制<code>/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</code>命令到终端回车运行，运行过程主要是中文提示。</li><li>选择git克隆时随便选择都行，如选择阿里巴巴镜像源。提示是否开始执行脚本输入<code>y</code>后回车继续。此过程会提示你输入密码后继续。到最后一步选择<code>brew install</code>的镜像源，同样选择阿里巴巴镜像源或者其它镜像源即可。</li><li>第二步等待完成后，会提示还需要配置一下环境变量。</li></ol><h2 id="安装-nvm" tabindex="-1"><a class="header-anchor" href="#安装-nvm"><span>安装 nvm</span></a></h2><p>nvm 可帮助前端开发者轻松切换 node 版本，通常可以让开发者轻松维护老项目或开发新项目。</p><p>使用 brew 进行安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 检测是否安装brew，若已安装，则运行以下命令会打印出brew的版本号</span>
brew <span class="token parameter variable">-v</span>
<span class="token comment"># 可以在安装之前卸载一遍，确保电脑上未安装nvm，使用nvm -v打印版本号也是可以的。</span>
<span class="token comment"># 但是如果nvm没有配置环境变量而又没打印出版本号，那么可能代表只是没有配置好环境变量，不代表没有安装</span>
brew uninstall nvm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>brew install nvm</code>进行安装，等待命令运行完成还需要配置环境变量。</p><p>  一般可以将环境变量配置进<code>~/.zshrc</code>里，这样每次电脑开机或者重新打开终端都可以自动加载环境变量，而排除某些时候需要手动运行<code>source xxx</code>。若有时候开机或打开终端都需要手动运行<code>source xxx</code>，可以尝试用这种方法来解决。</p><p>配置 nvm 环境变量：</p><ol><li><code>touch ~/.zshrc</code>，输入<code>i</code>进入编辑模式。</li><li>将以下命令粘贴进去：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token comment"># 设置nvm镜像源</span>
 <span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_NODEJS_ORG_MIRROR</span><span class="token operator">=</span>https://npmmirror.com/mirrors/node/
 <span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_IOJS_ORG_MIRROR</span><span class="token operator">=</span>http://npm.taobao.org/mirrors/iojs

 <span class="token comment"># nvm 配置</span>
 <span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_DIR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$HOME</span>/.nvm&quot;</span>
   <span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>. <span class="token string">&quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span>  <span class="token comment"># This loads nvm</span>
   <span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>. <span class="token string">&quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span>  <span class="token comment"># This loads nvm bash_completion</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>输入<code>:wq</code>保存并退出。</li><li>配置好后可以在终端输入<code>nvm -v</code>回车打印出nvm的版本号。若显示<code>command not found</code>，可以手动<code>source ~/.zshrc</code>一次，因为本次打开终端<code>.zshrc</code>里面是空的。</li></ol><h2 id="安装-node" tabindex="-1"><a class="header-anchor" href="#安装-node"><span>安装 node</span></a></h2><p>使用 nvm 管理node版本，即可使用nvm来安装node，此教程需要确保电脑安装了<code>nvm</code>，并且配置好了环境变量，即输入<code>nvm -v</code>可以打印出nvm版本号</p><ol><li>输入<code>nvm remote-ls</code>查看可以安装的node版本</li><li>输入<code>nvm install 18.18.0</code>运行安装版本号为<code>18.18.0</code>的node。</li><li>输入<code>nvm list</code>查看自己电脑安装的node版本列表，mac上当前使用的node版本，版本号左边会有箭头指向，而window上是<code>*</code>符号。</li><li>输入<code>nvm use 18.18.0</code>使用我们刚刚安装版本号为<code>18.18.0</code>的node。</li><li>输入<code>nvm alias default 18.18.0</code>，表示我们默认使用版本为<code>18.18.0</code>的node，就不用在一些情况需要手动<code>nvm use xxx</code>。</li></ol><h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git"><span>安装 git</span></a></h2><p>使用brew安装git：<code>brew install git</code></p>`,17);function u(b,g){const a=o("ExternalLinkIcon");return t(),c("div",null,[d,p,m,e("p",null,[n("  可以直接使用"),e("a",h,[n("Homebrew官方网站"),l(a)]),n("介绍的方法快速安装 Homebrew，但此方法需要使用到科学上网工具，否则无法成功安装。")]),v])}const _=s(r,[["render",u],["__file","mac.html.vue"]]),x=JSON.parse(`{"path":"/software/system-env/mac.html","title":"mac搭建","lang":"zh-CN","frontmatter":{"title":"mac搭建","date":"2023-03-16T00:00:00.000Z","category":["软件合集"],"description":"安装 homebrew 利用 homebrew 可以在终端快速安装你想要的软件，它是一款Mac OS平台下的软件包管理工具，拥有下载、卸载、更新、查看、搜索等功能。通过简单的指令可以实现包管理。而不用关心各种依赖和文件路径情况。类似于前端的npm来管理依赖包。 在安装之前可以检查一下电脑上是否安装了 brew，在终端上输入brew后回车，若显示comm...","head":[["meta",{"property":"og:url","content":"https://github.com/xinyang424/software/system-env/mac.html"}],["meta",{"property":"og:site_name","content":"XinYang"}],["meta",{"property":"og:title","content":"mac搭建"}],["meta",{"property":"og:description","content":"安装 homebrew 利用 homebrew 可以在终端快速安装你想要的软件，它是一款Mac OS平台下的软件包管理工具，拥有下载、卸载、更新、查看、搜索等功能。通过简单的指令可以实现包管理。而不用关心各种依赖和文件路径情况。类似于前端的npm来管理依赖包。 在安装之前可以检查一下电脑上是否安装了 brew，在终端上输入brew后回车，若显示comm..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XinYang's Blog"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mac搭建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XinYang's Blog\\",\\"url\\":\\"https://xinyang424.com\\"}]}"]]},"headers":[{"level":2,"title":"安装 homebrew","slug":"安装-homebrew","link":"#安装-homebrew","children":[]},{"level":2,"title":"安装 nvm","slug":"安装-nvm","link":"#安装-nvm","children":[]},{"level":2,"title":"安装 node","slug":"安装-node","link":"#安装-node","children":[]},{"level":2,"title":"安装 git","slug":"安装-git","link":"#安装-git","children":[]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":3.28,"words":984},"filePathRelative":"software/system-env/mac.md","localizedDate":"2023年3月16日","autoDesc":true}`);export{_ as comp,x as data};
