import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,a as o,d as n,b as i,w as c,e as l}from"./app-Ds4AiUcn.js";const r={},u=l(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> postcss-px-to-viewport
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="基于vite项目" tabindex="-1"><a class="header-anchor" href="#基于vite项目"><span>基于vite项目</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">//vite.config.js or vite.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> react <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> px2Viewport <span class="token keyword">from</span> <span class="token string">&quot;postcss-px-to-viewport&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    css<span class="token operator">:</span> <span class="token punctuation">{</span>
      postcss<span class="token operator">:</span> <span class="token punctuation">{</span>
        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token function">px2Viewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            unitToConvert<span class="token operator">:</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 要转化的单位</span>
            viewportWidth<span class="token operator">:</span> <span class="token number">375</span><span class="token punctuation">,</span> <span class="token comment">// UI设计稿的宽度</span>
            unitPrecision<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token comment">// 转换后的精度，即小数点位数</span>
            propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span>
            viewportUnit<span class="token operator">:</span> <span class="token string">&quot;vw&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定需要转换成的视窗单位，默认vw</span>
            fontViewportUnit<span class="token operator">:</span> <span class="token string">&quot;vw&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定字体需要转换成的视窗单位，默认vw</span>
            selectorBlackList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ignore-&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定不转换为视窗单位的类名，</span>
            minPixelValue<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认值1，小于或等于1px则不进行转换</span>
            mediaQuery<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在媒体查询的css代码中也进行转换，默认false</span>
            replace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否转换后直接更换属性值</span>
            landscape<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否处理横屏情况</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><p>若将<code>postcss-px-to-viewport</code>在ts项目中使用，由于<code>postcss-px-to-viewport</code>没有声明文件，这里需要自己手动写一个声明文件</p><ol><li>在项目的根目录下，新建一个<code>postcss-px-to-viewport.d.ts</code>文件。</li><li>内容参考如下，在根目录创建的声明文件，ts可以自动识别到。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;postcss-px-to-viewport&quot;</span> <span class="token punctuation">{</span>
  <span class="token keyword">type</span> <span class="token class-name">Options</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    unitToConvert<span class="token operator">:</span> <span class="token string">&quot;px&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;rem&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;cm&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;em&quot;</span><span class="token punctuation">;</span>
    viewportWidth<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    viewportHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// not now used; TODO: need for different units and math for different properties</span>
    unitPrecision<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    viewportUnit<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    fontViewportUnit<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// vmin is more suitable.</span>
    selectorBlackList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    propList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    minPixelValue<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    mediaQuery<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    replace<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    landscape<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    landscapeUnit<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    landscapeWidth<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">//Partial 可选参数</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Options<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function d(k,v){const s=t("RouteLink");return e(),p("div",null,[u,o("p",null,[n("若想声明文件都在一个文件夹下，可参考"),i(s,{to:"/note/practical-skills/ts-declare.html"},{default:c(()=>[n("此文章")]),_:1}),n("。")])])}const g=a(r,[["render",d],["__file","postcss-px-to-viewport.html.vue"]]),w=JSON.parse(`{"path":"/web/npm/postcss-px-to-viewport.html","title":"postcss-px-to-viewport","lang":"zh-CN","frontmatter":{"title":"postcss-px-to-viewport","date":"2022-03-01T00:00:00.000Z","category":["插件"],"tag":["移动端适配"],"description":" 安装 基于vite项目 注意事项 若将postcss-px-to-viewport在ts项目中使用，由于postcss-px-to-viewport没有声明文件，这里需要自己手动写一个声明文件 在项目的根目录下，新建一个postcss-px-to-viewport.d.ts文件。 内容参考如下，在根目录创建的声明文件，ts可以自动识别到。 若想声明文...","head":[["meta",{"property":"og:url","content":"https://github.com/xinyang424/web/npm/postcss-px-to-viewport.html"}],["meta",{"property":"og:site_name","content":"XinYang"}],["meta",{"property":"og:title","content":"postcss-px-to-viewport"}],["meta",{"property":"og:description","content":" 安装 基于vite项目 注意事项 若将postcss-px-to-viewport在ts项目中使用，由于postcss-px-to-viewport没有声明文件，这里需要自己手动写一个声明文件 在项目的根目录下，新建一个postcss-px-to-viewport.d.ts文件。 内容参考如下，在根目录创建的声明文件，ts可以自动识别到。 若想声明文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XinYang's Blog"}],["meta",{"property":"article:tag","content":"移动端适配"}],["meta",{"property":"article:published_time","content":"2022-03-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"postcss-px-to-viewport\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XinYang's Blog\\",\\"url\\":\\"https://xinyang424.com\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"基于vite项目","slug":"基于vite项目","link":"#基于vite项目","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":1.44,"words":433},"filePathRelative":"web/npm/postcss-px-to-viewport.md","localizedDate":"2022年3月1日","autoDesc":true}`);export{g as comp,w as data};
